---
# Source: aws-auth-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-auth-operator
  namespace: aws-auth-operator
  labels:
    app.kubernetes.io/name: aws-auth-operator
    helm.sh/chart: aws-auth-operator-0.1.1
    app.kubernetes.io/instance: aws-auth-operator
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: aws-auth-operator
---
# Source: aws-auth-operator/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-auth-operator
  labels:
    app: aws-auth-operator
    chart: "aws-auth-operator-0.1.1"
    release: "aws-auth-operator"
    heritage: "Helm"
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: aws-auth-operator

data:
  USE_PROTECTED_MAPPING: "true"
---
# Source: aws-auth-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-auth-operator
  labels:
    app: aws-auth-operator
    chart: aws-auth-operator-0.1.1
    release: aws-auth-operator
    heritage: Helm
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: aws-auth-operator
rules:
  - apiGroups: ["tier.app"]
    resources: ["awsauthmappings"]
    verbs: ["*"]
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "get", "watch", "create"]
  - apiGroups: [""]
    resources: ["services", "pods", "namespaces","deployments"]
    verbs: ["list", "get", "watch"]
---
# Source: aws-auth-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aws-auth-operator
  labels:
    app: aws-auth-operator
    chart: aws-auth-operator-0.1.1
    release: aws-auth-operator
    heritage: Helm
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: aws-auth-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-auth-operator
subjects:
  - name: aws-auth-operator
    namespace: "aws-auth-operator"
    kind: ServiceAccount
---
# Source: aws-auth-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-auth-operator
  labels:
    app.kubernetes.io/name: aws-auth-operator
    helm.sh/chart: aws-auth-operator-0.1.1
    app.kubernetes.io/instance: aws-auth-operator
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-auth-operator
      app.kubernetes.io/instance: aws-auth-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-auth-operator
        app.kubernetes.io/instance: aws-auth-operator
      annotations:
        timestamp: "20220627153704"
    spec:
      serviceAccountName: aws-auth-operator
      containers:
        - name: aws-auth-operator
          image: ":latest-master"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
              
          envFrom:
            - configMapRef:
                name: aws-auth-operator
          env:
            - name: PORT
              value: "8080"
          resources:
            null

